<?xml version="1.0"?>
<launch>
    <!-- Sets where the output goes from the modules -->
    <arg name="main_loop_output" default="screen" />
    <arg name="ros_interface_output" default="log" />
    <arg name="global_wind_output" default="log" />

    <!-- Sets the obstacle representation type, accepted types are: "ellipse", "wedge","circles", "hybrid_circle", and "hybrid_ellipse" (full list in getObstacles())-->
    <arg name="obstacle_type" default="hybrid_circle" />
    <param name="obstacle_type" type="string" value="$(arg obstacle_type)" />

    <!-- Set if screenshots should be taken or not -->
    <arg name="screenshot" default="false" />
    <param name="screenshot" type="bool" value="$(arg screenshot)" />

    <!-- Set if pathfinding problem should be plotted or not -->
    <arg name="plot_pathfinding_problem" default="false" />
    <param name="plot_pathfinding_problem" type="bool" value="$(arg plot_pathfinding_problem)" />

    <!-- Sets planner type, accepted types include: "RRTStar", "RRTSharp","RRTXStatic" (full list in allocatePlanner()) -->
    <arg name="planner_type" default="RRTStar" />
    <param name="planner_type" type="string" value="$(arg planner_type)" />

    <!-- Use LOS heading -->
    <arg name="enable_los" default="false" />
    <param name="enable_los" type="bool" value="$(arg enable_los)" />

    <node pkg="local_pathfinding" type="main_loop.py" name="main_loop" output="$(arg main_loop_output)"/>
    <node pkg="local_pathfinding" type="ros_interface.py" name="ros_interface" output="$(arg ros_interface_output)"/>
    <node pkg="local_pathfinding" type="global_wind.py" name="global_wind" output="$(arg global_wind_output)"/>
</launch>

