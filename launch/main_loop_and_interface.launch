<?xml version="1.0"?>
<launch>
    <!-- Sets planner parameters like the number of runs and runtime used for each planning call -->
    <arg name="num_runs" default="8" />
    <arg name="runtime_seconds" default="0.125" />
    <arg name="state_sampler" default="grid" />
    <arg name="grid_n" default="15" />
    <arg name="planner_type" default="lazyprmstar" />
    <param name="num_runs" type="int" value="$(arg num_runs)" />
    <param name="runtime_seconds" type="double" value="$(arg runtime_seconds)" />
    <param name="state_sampler" type="string" value="$(arg state_sampler)" />
    <param name="grid_n" type="int" value="$(arg grid_n)" />
    <param name="planner_type" type="string" value="$(arg planner_type)" />

    <!-- Sets where the output goes from the modules -->
    <arg name="main_loop_output" default="screen" />
    <arg name="ros_interface_output" default="log" />

    <!-- Sets the obstacle representation type, accepted types are: "ellipse", "wedge","circles", "hybrid_circle", and "hybrid_ellipse" (full list in getObstacles())-->
    <arg name="obstacle_type" default="hybrid_circle" />
    <param name="obstacle_type" type="string" value="$(arg obstacle_type)" />

    <!-- Set if screenshots should be taken or not -->
    <arg name="screenshot" default="false" />
    <param name="screenshot" type="bool" value="$(arg screenshot)" />

    <!-- Set if pathfinding problem should be plotted or not -->
    <arg name="plot_pathfinding_problem" default="false" />
    <param name="plot_pathfinding_problem" type="bool" value="$(arg plot_pathfinding_problem)" />

    <!-- Use LOS heading -->
    <arg name="enable_los" default="false" />
    <param name="enable_los" type="bool" value="$(arg enable_los)" />

    <!-- Wandb logger -->
    <arg name="wandb" default="false" />
    <node pkg="local_pathfinding" type="wandb_log.py" name="wandb_log" if="$(arg wandb)" output="screen" />

    <!-- Main loop and interface -->
    <node pkg="local_pathfinding" type="main_loop.py" name="main_loop" output="$(arg main_loop_output)"/>
    <node pkg="local_pathfinding" type="ros_interface.py" name="ros_interface" output="$(arg ros_interface_output)"/>
</launch>

