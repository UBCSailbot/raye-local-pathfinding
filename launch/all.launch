<?xml version="1.0"?>
<launch>
    <!-- main_loop logs. Can be 'log' to be stored in log file or 'screen' to be printed to screen. -->
    <arg name="main_loop_output" default="screen" />
    <arg name="store_path" default="true" />
    <arg name="store_distance" default="true" />

    <!-- Setup mocks. View launch_all_mocks.launch for argument descriptions. -->
    <arg name="initial_speedup" default="1.0" />
    <arg name="num_ais_ships" default="5" />
    <arg name="obstacle_type" default="hybrid_circle" />
    <arg name="ais_file" default="" />
    <arg name="gps_file" default="" />
    <arg name="goal_file" default="" />
    <arg name="wind_file" default="" />
    <arg name="screenshot" default="false" />
    <arg name="plot_pathfinding_problem" default="false" />
    <arg name="random_seed" default="" />
    <arg name="planner_type" default="RRTStar" />
    <arg name="smooth_changes" default="true" />
    <arg name="ocean_current_speed" default="0.0" />
    <arg name="ocean_current_direction" default="0.0" />
    <include file="$(find local_pathfinding)/launch/launch_all_mocks.launch">
      <arg name="initial_speedup" value="$(arg initial_speedup)"/>
      <arg name="num_ais_ships" value="$(arg num_ais_ships)"/>
      <arg name="obstacle_type" value="$(arg obstacle_type)"/>
      <arg name="ais_file" value="$(arg ais_file)"/>
      <arg name="gps_file" value="$(arg gps_file)"/>
      <arg name="goal_file" value="$(arg goal_file)"/>
      <arg name="wind_file" value="$(arg wind_file)"/>
      <arg name="screenshot" value="$(arg screenshot)"/>
      <arg name="plot_pathfinding_problem" value="$(arg plot_pathfinding_problem)"/>
      <arg name="random_seed" value="$(arg random_seed)" />
      <arg name="planner_type" value="$(arg planner_type)" />
      <arg name="smooth_changes" value="$(arg smooth_changes)" />
      <arg name="ocean_current_speed" default="$(arg ocean_current_speed)" />
      <arg name="ocean_current_direction" default="$(arg ocean_current_direction)" />
    </include>

    <node pkg="local_pathfinding" type="main_loop.py" name="main_loop" output="$(arg main_loop_output)"/>
    <node pkg="local_pathfinding" type="local_path_visualizer.py" name="local_path_visualizer" />
    <node pkg="local_pathfinding" type="collision_checker.py" name="collision_checker" output="screen" />
    <node pkg="local_pathfinding" type="store_sailbot_gps.py" name="store_sailbot_gps" output="screen" />
    <node pkg="local_pathfinding" type="path_storer.py" name="path_storer" if="$(arg store_path)" output="screen" />
    <node pkg="local_pathfinding" type="log_closest_obstacle.py" name="closest_obstacle" if="$(arg store_distance)" output="screen" />
</launch>
